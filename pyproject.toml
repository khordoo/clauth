[project]
name = "clauth"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Mahmood.Khordoo", email = "Mahmood.Khordoo@riotinto.com" }
]
requires-python = ">=3.10"
dependencies = [
    "boto3>=1.40.31",
    "inquirerpy>=0.3.4",
    "typer>=0.17.4",
    "pydantic>=2.0.0",
    "toml>=0.10.2",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "moto>=4.0.0",  # Mock AWS services
]

[project.scripts]
clauth = "clauth.cli:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/clauth",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=20",
]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "unit: marks tests as unit tests",
    "aws: marks tests that interact with AWS services",
]

[tool.coverage.run]
source = ["src/clauth"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "moto>=5.1.12",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.1",
]
